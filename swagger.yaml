---
swagger: '2.0'
info:
  version: 1.0.0
  title: Member Project CRUD
  description: Member Project Application API
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
host: localhost:80
basePath: "/"
tags:
- name: Users
  description: API for users in the system
schemes:
- http
consumes:
- application/json
produces:
- application/json
paths:
  "/emergency":
    get:
      tags:
      - employee
      description: View employee get
      parameters:
      - name: bnum
        in: query
        required: true
        schema:
          type: string
        description: Department Code ex - D0 
      produces:
      - application/json
      responses:
        '200':
          success: Whether or not to success
          count: employee count to be requested
          rowset: employee row from database
    post:
      tags:
      - employee
      description: Department Code ex - D0 
      parameters:
      - in: body
        name: data
        description: json object to request employee
        required: false
        schema:
          "$ref": "#/definitions/Employee"
      produces:
      - application/json
      responses:
        '200':
          success: Whether or not to success
          count: employee count to be requested
          rowset: employee row from database
  "/member":
    get:
      tags:
      - member
      description: View Member get
      parameters:
      - name: bnum
        in: query
        required: true
        schema:
          type: integer
        description: count of member that we want to find
      - name: chcode
        in: query
        required: false
        schema:
          type: string
        description: api code name to process
      produces:
      - application/json
      responses:
        '200':
          success: Whether or not to success
          count: member count to be requested
          chcode: application api process code
          rowset: member row from database
    post:
      tags:
      - member
      description: View Member Post
      parameters:
      - in: body
        name: data
        description: json object to request member
        required: false
        schema:
          "$ref": "#/definitions/Member"
      produces:
      - application/json
      responses:
        '200':
          success: Whether or not to success
          count: member count to be requested
          chcode: application api process code
          rowset: member row from database
  "/addUser":
    post:
      tags:
      - Users
      description: Create new user in system
      parameters:
      - name: user
        in: body
        description: User that we want to create
        schema:
          "$ref": "#/definitions/User"
      produces:
      - application/json
      responses:
        '200':
          description: New user is created
          schema:
            "$ref": "#/definitions/User"
  "/users":
    get:
      tags:
      - Users
      summary: Get all users in system
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/Users"
  "/user/{id}":
    parameters:
    - name: id
      in: path
      required: true
      description: ID of user that we want to find
      type: integer
    delete:
      summary: Delete user with given ID
      tags:
      - Users
      responses:
        '200':
          description: User is deleted
          schema:
            "$ref": "#/definitions/User"
    put:
      summary: Update user with give ID
      tags:
      - Users
      parameters:
      - name: user
        in: body
        description: User with new values of properties
        schema:
          "$ref": "#/definitions/updateUser"
      responses:
        '200':
          description: User is updated
          schema:
            "$ref": "#/definitions/User"
definitions:
  Employee:
    required:
    - bnum
    properties:
      bnum:
        type: string
  Member:
    required:
    - bnum
    properties:
      bnum:
        type: integer
      chcode:
        type: string
  User:
    required:
    - name
    - _id
    - companies
    properties:
      _id:
        type: integer
        uniqueItems: true
      isPublic:
        type: boolean
      name:
        type: string
      books:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
            amount:
              type: number
      companies:
        type: array
        items:
          type: string
  updateUser:
    required:
    - name
    - companies
    properties:
      isPublic:
        type: boolean
      name:
        type: string
      books:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
            amount:
              type: number
      companies:
        type: array
        items:
          type: string
  Users:
    type: array
    "$ref": "#/definitions/User"
